{"ast":null,"code":"var _jsxFileName = \"D:\\\\GITHUB PROJECTS\\\\Projects\\\\todo-app\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ToDoInput from \"./ToDoInput\";\nimport ToDoList from \"./ToDoList\";\nimport Container from \"@mui/material/Container\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = todo => {\n    setTodos([...todos, {\n      text: todo,\n      completed: false\n    }]);\n  };\n  const toggleComplete = index => {\n    const newTodos = [...todos];\n    newTodos[index].completed = !newTodos[index].completed;\n    setTodos(newTodos);\n  };\n  const removeTodo = index => {\n    /**\n     * Callback function (_, i) => i !== index:\n     * The filter method takes a callback function as an argument. This callback function is executed for each element in the array.\n     * The callback function takes two parameters:\n     * * The first parameter (typically element or _ in this case) represents the current element being processed in the array.\n     * * The second parameter (i) represents the index of the current element being processed in the array.\n     * In this case, the underscore _ is used as a placeholder for the first parameter since it is not needed in the function body.\n     */\n    const newTodos = todos.filter((_, i) => i !== index);\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      className: \"text-center my-4\",\n      children: \"ToDo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoInput, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      todos: todos,\n      toggleComplete: toggleComplete,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToDoInput","ToDoList","Container","Typography","jsxDEV","_jsxDEV","App","_s","todos","setTodos","addTodo","todo","text","completed","toggleComplete","index","newTodos","removeTodo","filter","_","i","children","variant","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/GITHUB PROJECTS/Projects/todo-app/todo-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ToDoInput from \"./ToDoInput\";\nimport ToDoList from \"./ToDoList\";\nimport Container from \"@mui/material/Container\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (todo) => {\n    setTodos([...todos, { text: todo, completed: false }]);\n  };\n\n  const toggleComplete = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].completed = !newTodos[index].completed;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = (index) => {\n    /**\n     * Callback function (_, i) => i !== index:\n     * The filter method takes a callback function as an argument. This callback function is executed for each element in the array.\n     * The callback function takes two parameters:\n     * * The first parameter (typically element or _ in this case) represents the current element being processed in the array.\n     * * The second parameter (i) represents the index of the current element being processed in the array.\n     * In this case, the underscore _ is used as a placeholder for the first parameter since it is not needed in the function body.\n     */\n    const newTodos = todos.filter((_, i) => i !== index);\n    setTodos(newTodos);\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h2\" className=\"text-center my-4\">\n        ToDo App\n      </Typography>\n      <ToDoInput addTodo={addTodo} />\n      <ToDoList\n        todos={todos}\n        toggleComplete={toggleComplete}\n        removeTodo={removeTodo}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,OAAO,GAAIC,IAAI,IAAK;IACxBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEI,IAAI,EAAED,IAAI;MAAEE,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,QAAQ,GAAG,CAAC,GAAGR,KAAK,CAAC;IAC3BQ,QAAQ,CAACD,KAAK,CAAC,CAACF,SAAS,GAAG,CAACG,QAAQ,CAACD,KAAK,CAAC,CAACF,SAAS;IACtDJ,QAAQ,CAACO,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,UAAU,GAAIF,KAAK,IAAK;IAC5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,MAAMC,QAAQ,GAAGR,KAAK,CAACU,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKL,KAAK,CAAC;IACpDN,QAAQ,CAACO,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEX,OAAA,CAACH,SAAS;IAAAmB,QAAA,gBACRhB,OAAA,CAACF,UAAU;MAACmB,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,kBAAkB;MAAAF,QAAA,EAAC;IAEtD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbtB,OAAA,CAACL,SAAS;MAACU,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BtB,OAAA,CAACJ,QAAQ;MACPO,KAAK,EAAEA,KAAM;MACbM,cAAc,EAAEA,cAAe;MAC/BG,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAACpB,EAAA,CAvCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}